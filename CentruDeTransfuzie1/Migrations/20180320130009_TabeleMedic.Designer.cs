// <auto-generated />
using CentruDeTransfuzie1;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace CentruDeTransfuzie1.Migrations
{
    [DbContext(typeof(CTContext))]
    [Migration("20180320130009_TabeleMedic")]
    partial class TabeleMedic
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Medic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Cnp");

                    b.Property<string>("Email");

                    b.Property<string>("Nume");

                    b.Property<string>("Prenume");

                    b.Property<string>("Telefon");

                    b.Property<int?>("UserMedicId");

                    b.HasKey("Id");

                    b.HasIndex("UserMedicId")
                        .IsUnique()
                        .HasFilter("[UserMedicId] IS NOT NULL");

                    b.ToTable("Medic");
                });

            modelBuilder.Entity("UserMedic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Parola");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("UserMedic");
                });

            modelBuilder.Entity("Medic", b =>
                {
                    b.HasOne("UserMedic", "UserMedic")
                        .WithOne("Medic")
                        .HasForeignKey("Medic", "UserMedicId");
                });
#pragma warning restore 612, 618
        }
    }
}
