<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        sH7++T/vK/jtje9pFQAAAABJRU5ErkJggg==
</value>
  </data>
</root>