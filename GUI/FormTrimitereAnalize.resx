<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QC2RXhpZgAATU0AKgAAAAgAAgESAAMAAAABAAEAAIdpAAQAAAAB
        AAAAJgAAAAAAAZKGAAcAAAB0AAAAOAAAAABDAFIARQBBAFQATwBSADoAIABnAGQALQBqAHAAZQBnACAA
        dgAxAC4AMAAgACgAdQBzAGkAbgBnACAASQBKAEcAIABKAFAARQBHACAAdgA4ADAAKQAsACAAcQB1AGEA
        bABpAHQAeQAgAD0AIAA5ADAACgAAAAAA/9sAQwACAQECAQECAgICAgICAgMFAwMDAwMGBAQDBQcGBwcH
        BgcHCAkLCQgICggHBwoNCgoLDAwMDAcJDg8NDA4LDAwM/9sAQwECAgIDAwMGAwMGDAgHCAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM/8AAEQgAQQATAwEiAAIRAQMR
        Af/EAB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAE
        EQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZHSElK
        U1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrC
        w8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEBAQEAAAAAAAAB
        AgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXETIjKBCBRCkaGxwQkj
        M1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5
        eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uLj5OXm
        5+jp6vLz9PX29/j5+v/aAAwDAQACEQMRAD8A/cJR8tDDA70E+lAya+MlufQDaKKKQDx2+lLTSMgUoGDT
        e4DCcminbM96KQABnuaXGDSJQaABX4opi/dooAkXpTX604nBprHJoAZuPpRTqKAF/g/GkoooAKKKKAP/
        2Q==
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEiKRAAYJ
        hQAHDIYBBwuGBAYLgwQGCoECCA2BAAUKggANFIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAHjidAB44nQMeOJ0UHDOeGBownw4aMJ8AGjCfAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAB85owAdNaEGIT2lHCVDqEQqSapBLUyrJR83oAgbMJwBHzafAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAChHpwAoR6cAAwevAB84qB4hO6paJkOujzBSsnU4XLNEK0irHCZBqAYAAJEAHzmlAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAABQklQAAAEoAKEerACdEqgApSqQLITitVCE4sL4mPrXhME65pzpeumg1V7NBKkesGhw1
        owYiPacAEiCSAHvL/wANGIwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAADNXvAAxU6ICLU6qDxsypE0nQL2mMk/S8ThV1/wwSsXYLkm2nT5h
        umQ1WLRAK0msHx0yogkhOaUAITmlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAEyiYABMomAADEI4BMFKmBilEqRsfNKlQIzq4pTFN0uVDZO//Smz0/ztX
        2/YuSMLSMEy3mTpcuGk4W7VEL0+vJCJApg0WKpkDAAAAAAAAfwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAADReVAAAAiAAZLJwBJ0KlBCdDpw8pRasoJj+wWiI3tbMuSNDsPl3r/05w
        /f9Ud/7/TXDz/ztZ2fYpQbzXNlS7mDteuXE3W7VPLlCvLihGqxMhOqUGGjGgAQUKagDc//8AAABeAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAHjejAB43owAVJJoADxqVAh82ogkrSasaLk2tPSQ9rnwiObjFMEzU7z5e
        7f1Iavn/T3H6/1d7+v9dgPv/VHfy/j9f3PcqQr7dL0q3qDxfunk9YbpZM1WyPylHqyIdNaMNER6WAgkQ
        jgAOGJIAFCabAAAAAAAAAAAAAAAAAAAAAAAbNaIAGzWiAA8lngItTacPK0moLSM8qWUhN7KiJz/D1jJO
        2PQ9Xev+QmT2/0Vn+f9Iavf/TnH3/1d7+f9bf/j/Vnnw/kJg3fkxS8fkKkO4vjFOtI88X7hoOVy2TC9P
        rzIkP6YYFyudBgAAYgAFDpEAAAAAAAAAAAAAAAAAKkmkADJXqAApSKQCIz2fGSA4pkYhOK+BJT27vSlC
        yOwyTtr/Pl/v/0Fi9f9AYPX/Pl70/z5e9P9CY/T/Smz1/1R49/9bf/f/Vnrz/0Jh3/8zTszwLUi/zC1K
        t6QyUrSANVayXTBQrzwmQ6geHDOgCgAAhQENGpQAAAAAABoykQAaL6UAGS+fBBovoRwgNqhWHzSxoSE3
        veIsRdP7OVjm/0Fi8f9AYPP/PFvy/zlX8f83VfD/NlTw/zhW8f8+XfL/RWfz/09y8/9YfPX/WH31/0tt
        6f82U9T7KEC/5ilEt7owTrWPMVCyaytJq0cjPqUiFieaCQ4XjQEAAAAAFCSbAChGxQAWKJ8WFyqjaxst
        s8MlO8jzM1Dg+zxa6/8+Xu//PV3v/zpY7/82VO7/Mk/u/zFN7f8xTO3/MU3t/zNP7v83Ve7/P1/v/0ps
        8P9SdvL/Vnrz/1J17v9DY+H8LUfK9SI4t9clPa6jLEmucClFqUUfNaAfDxqPBQAAAAAPG5wADBaWGhMh
        pWMcL7nGJj3O9DBL3/85V+v/O1ru/zlX7f81Uuv/Mk7r/y9K6v8uSOr/LUfr/y1H6/8tR+v/Lkfq/y9J
        6v8zT+v/Oljr/0Nk7f9NcPD/VHfx/1N27f9FZeP/M07R+CM6vd4gNq2rIjmmbyM8ojcUJpgVBAaJAAAA
        ZgcQHKVNFye1viI3zvYtR+D/NFHq/zVS6f8zUOn/MEvo/y1I5/8sRef/KkPn/ypD5/8qQ+f/KkPn/ypD
        5/8qQ+f/KkPn/ytE5/8uSOf/NFDo/zxb6f9HaOz/UXTt/1R37/9HZ+b/MEvS+yA0ueAbL6mhGy+fVxUo
        mSYBAXQFAgSILBMgr5EdMMb9KEDf/yxF5P8tR+P/LUfj/ytE4/8oQeP/Jj/j/yc+4/8nPuP/Jz7j/yc+
        4/8nPuP/Jz7j/yc+4/8nPuP/Jz7j/yc+4/8oQOP/LEbk/zVS5v9BYOj/TW/q/1F07P9GZub/KkLM/hos
        stETIZ9/FSWXNwABciEIDJVwFiW4zCU82P8oQeH/Jz7h/yY84P8mPOD/JDrg/yQ54P8jOeD/Izng/yM5
        4P8jOeD/Izng/yM54P8jOeD/Izng/yM54P8jOeD/Izng/yQ54P8kOuD/Jz7g/y9J4f88W+P/SWvn/0tt
        6P85V97/IDS+8hIepaURG5RIAQJ0SgwUnaIbK7/uKkPe/yxF4P8oP9//Izjd/yA03P8gNdz/IDXc/yE1
        3P8gNdz/IDXc/yA13P8gNNz/IDTc/yA03P8gNNz/IDXc/yA13P8gNdz/IDXc/yA03P8gM9z/Izfc/y1G
        3/88WuL/Rmfl/z9f5P8mPMj/FCOvvQsTk1wDBIZsDxmmwB4ww/0vSd//NVHf/y9J3v8kOtv/HC/Y/x0w
        2P8dMdj/HTHY/x4x2P8eMdn/HzPZ/yA02f8gNdn/ITXZ/yA12f8fM9n/HjLZ/x4x2P8dMdj/HTDY/xwu
        2P8cLtj/Ijfa/y9K3f89XeH/PV3i/yhAzP8XJrTFCRCSaQQGm3wPGq7KHzPF/zVS3v9DZOD/Olne/yhA
        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
        AAHAAYAD4AHAA+ADwAf4B/Af//////////8=
</value>
  </data>
</root>